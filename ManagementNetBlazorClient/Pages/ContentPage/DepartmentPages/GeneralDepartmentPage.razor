@using BasicLibrary.Entites
@implements IDisposable

@if (allStates.ShowGeneralDepartment)

{
    <div class="continer mt-5">
        <div class="row">
          <div class="col-lg-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="float-start">General Department</h4>
                     <button class="btn btn-outline-success float-end" @onclick="OpenDialog">
                         <i class="bi bi-plus-circle-dotted"></i>
                          Add Department
                     </button>
                
                </div>
                <div class="card-header">
                    <div class="card-body">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th scope="col"> # </th>
                                    <th scope="col"> Id </th>
                                    <th scope="col"> General Department </th>
                                    <th scope="col"> Action </th>
                                </tr>
                            </thead>
                            <tbody>
                                
                                    @if (GeneralDepartments is not null)
                                    {
                                        int count = 1;
                                        foreach (var item in GeneralDepartments)
                                        {
                                            <tr>
                                                <th scope="row">@count</th>
                                                <th>@item.Id</th>
                                                <th>@item.Name</th>
                                                <td>
                                                    <i class="bi bi-pentcil text-info" id="cursorStyle"
                                                    @onclick="()=>EditClicked(item)"></i>
                                                  @*   <i class="bi bi-trash text-danger" id="cursorStyle"
                                                    @onclick="() => DeleteClicked(item)">

                                                    </i> *@
                                                </td>
                                            </tr>
                                            count++;
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="4"><div class="alert alert-info text-center">No General Department added yet </div></td>
                                        </tr>
                                    }
                                </tbody>
                        </table>
                    </div>
                </div>
            </div>
          </div>
        </div>

    </div>

}
<GeneralDepartmentDialog @ref="generalDepartmentDialog"
                         HandleSaveOperationEvent="HandleSaveOperationEvent"
                         GeneralDepartment="GeneralDepartment"/>

@code{
    GeneralDepartmentDialog? generalDepartmentDialog;
    GeneralDepartment GeneralDepartment = new();
    public string Title { get; set; } = "Add";
    public List<GeneralDepartment> GeneralDepartments { get; set; } = new();
    protected override async void OnInitialized()
    {
        await GetGeneralDepartment();
        allStates.GeneralDepartmentAction += StateHasChanged;
    }

    private async Task GetGeneralDepartment()
    {
        
        
        GeneralDepartments = await generalDepartmentService.GetAll(Constants.GeneralDepartmentBaseUrl);
    }
    void OpenDialog()
    {
        generalDepartmentDialog?.OpenDialog();
    }
    public void Dispose(){
        allStates.GeneralDepartmentAction -= StateHasChanged;

    }
    private async Task HandleSaveOperationEvent(GeneralDepartment generalDepartment)
    {
        bool successCheck = false;
        if (generalDepartment.Id > 0)
        {
            var res = await generalDepartmentService
            .Update(generalDepartment, Constants.GeneralDepartmentBaseUrl);
            successCheck = await DisplayMessage(res.Flaag, res.Message);
        }
        else
        {
            var response = await generalDepartmentService
            .Insert(generalDepartment,Constants.GeneralDepartmentBaseUrl);
            successCheck = await DisplayMessage(response.Flaag, response.Message);
        }
        if (successCheck)
        {
            GeneralDepartment = new();
            await GetGeneralDepartment();
            generalDepartmentDialog?.ChangeTitle("Add");
        }
    }
    private void EditClicked(GeneralDepartment dep)
    {
        generalDepartmentDialog?.ChangeTitle("Update");
        GeneralDepartment = dep;
        OpenDialog();
    }
    private async Task<bool> DisplayMessage(bool flag, string message){
        if(flag)
        {
            await dialogService.AlertAsync(message, "Success Operation");
            return true;
        }
        else
        {
            await dialogService.AlertAsync(message, "Alert!");
            return false;
        }
    }
}